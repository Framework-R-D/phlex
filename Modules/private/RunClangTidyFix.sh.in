#!/usr/bin/env bash
set -euo pipefail

# This script is generated by CMake. It wraps run-clang-tidy to allow
# selecting a specific subset of checks and/or a specific file list at
# build time via environment variables.  Use it like:
#
#   PHLEX_TIDY_CHECKS="misc-include-cleaner" PHLEX_TIDY_FILES="src/foo.cpp,src/bar.cpp" \
#     ./phlex_run_clang_tidy_fix.sh --fix --require-checks
#
# Supported environment variables:
# - PHLEX_TIDY_CHECKS: comma- or space-separated list of clang-tidy checks
# - PHLEX_TIDY_FILES: comma-separated list of files to pass to run-clang-tidy
# - PHLEX_TIDY_DRY_RUN: if set to '1', the command will only be printed

RUN_CLANG_TIDY="@RUN_CLANG_TIDY_EXECUTABLE@"
CLANG_TIDY_BIN="@CLANG_TIDY_EXECUTABLE@"
COMPILE_DB="@_phlex_compile_db_dir@"
CLANG_TIDY_CONFIG="@_phlex_clang_tidy_config@"
FILES_REGEX='@_files_regex@'

DO_FIX=0
REQUIRE_CHECKS=0
while [ "$#" -gt 0 ]; do
  case "$1" in
    --fix)
      DO_FIX=1
      shift
      ;;
    --require-checks)
      REQUIRE_CHECKS=1
      shift
      ;;
    *)
      # ignore unknown args for forward-compat
      shift
      ;;
  esac
done

# Normalize checks if provided
CHECKS_ARG=""
if [ -n "${PHLEX_TIDY_CHECKS:-}" ]; then
  # normalize commas/spaces to a single comma-separated list
  CHECKS=$(printf "%s" "$PHLEX_TIDY_CHECKS" | tr ',' ' ' | xargs -n1 | paste -sd, -)
  CHECKS_ARG="-checks=-*,${CHECKS}"
fi

if [ "$REQUIRE_CHECKS" -eq 1 ] && [ -z "$CHECKS_ARG" ]; then
  echo "Error: PHLEX_TIDY_CHECKS must be set when --require-checks is used." >&2
  exit 2
fi

# Build file list (if any)
FILES_ARG_LIST=()
if [ -n "${PHLEX_TIDY_FILES:-}" ]; then
  # allow comma separated list
  IFS=',' read -r -a _tmp_files <<< "${PHLEX_TIDY_FILES}"
  for _f in "${_tmp_files[@]}"; do
    # trim
    _f=$(echo "${_f}" | awk '{gsub(/^[ \t]+|[ \t]+$/,"",$0); print $0}')
    [ -n "${_f}" ] && FILES_ARG_LIST+=("${_f}")
  done
fi

CMD=("$RUN_CLANG_TIDY" -p "$COMPILE_DB" -clang-tidy-binary "$CLANG_TIDY_BIN" -config-file "$CLANG_TIDY_CONFIG")
[ -n "$CHECKS_ARG" ] && CMD+=("$CHECKS_ARG")
CMD+=("-source-filter" "$FILES_REGEX" "-header-filter" "$FILES_REGEX")
[ "$DO_FIX" -eq 1 ] && CMD+=("-fix")

if [ ${#FILES_ARG_LIST[@]} -gt 0 ]; then
  CMD+=("${FILES_ARG_LIST[@]}")
fi

if [ "${PHLEX_TIDY_DRY_RUN:-0}" = "1" ]; then
  echo "DRY RUN: ${CMD[*]}"
  exit 0
fi

exec "${CMD[@]}"
