name: CMake Build and Test
run-name: "${{ github.actor }} building and testing Phlex"

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  # Check if workflow should run based on PR comment trigger
  check-trigger:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issue_comment' && github.event.issue.pull_request)
    runs-on: ubuntu-latest
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}
    steps:
      - name: Check trigger condition
        id: check
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "triggered=true" >> $GITHUB_OUTPUT
          elif echo "$COMMENT_BODY" | grep -qE '^@phlexbot[[:space:]]+build\b'; then
            echo "triggered=true" >> $GITHUB_OUTPUT
          else
            echo "triggered=false" >> $GITHUB_OUTPUT
          fi
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}

  build:
    needs: check-trigger
    if: needs.check-trigger.outputs.triggered == 'true'
    runs-on: ubuntu-24.04

    container:
      image: ghcr.io/framework-r-d/phlex-ci:2025-10-21

    steps:
    - name: Get PR details for comment trigger
      if: github.event_name == 'issue_comment'
      id: pr
      uses: actions/github-script@v7
      with:
        script: |
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          return {
            ref: pr.data.head.ref,
            sha: pr.data.head.sha
          };

    - name: Check out code
      uses: actions/checkout@v4
      with:
        path: phlex-src
        ref: ${{ github.event_name == 'issue_comment' && fromJSON(steps.pr.outputs.result).sha || github.ref }}

    - name: Setup build environment
      uses: ./phlex-src/.github/actions/setup-build-env

    - name: Configure CMake
      uses: ./phlex-src/.github/actions/configure-cmake
      with:
        build-type: ${{ env.BUILD_TYPE }}

    - name: Build
      uses: ./phlex-src/.github/actions/build-cmake

    - name: Test
      run: |
        . $GITHUB_WORKSPACE/phlex-src/ci/entrypoint.sh
        cd $GITHUB_WORKSPACE/phlex-build
        ctest -j $(nproc)
