name: Clang-Tidy Check
'run-name': "${{ github.actor }} running clang-tidy check"

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  detect-clang-tidy-changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    outputs:
      has_changes: ${{ steps.filter.outputs.matched }}
      changed_files: ${{ steps.filter.outputs.matched_files }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: phlex-src

    - name: Detect clang-tidy relevant changes
      id: filter
      uses: ./phlex-src/.github/actions/detect-relevant-changes
      with:
        repo-path: phlex-src
        base-ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
        head-ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
        file-type: |
          cpp
          cmake

    - name: Report detection outcome
      run: |
        if [ "${{ steps.filter.outputs.matched }}" != "true" ]; then
          echo "::notice::No clang-tidy relevant changes detected; job will be skipped."
        else
          echo "::group::Clang-tidy relevant files"
          printf '%s\n' "${{ steps.filter.outputs.matched_files }}"
          echo "::endgroup::"
        fi

  clang-tidy-check:
    needs: detect-clang-tidy-changes
    if: ${{ needs.detect-clang-tidy-changes.outputs.has_changes == 'true' }}
    runs-on: ubuntu-24.04

    container:
      image: ghcr.io/framework-r-d/phlex-ci:2025-10-21

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: phlex-src

    - name: Setup build environment
      uses: ./phlex-src/.github/actions/setup-build-env

    - name: Configure CMake (Debug)
      uses: ./phlex-src/.github/actions/configure-cmake
      with:
        build-type: Debug
        extra-options: -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Run clang-tidy using CMake target
      shell: bash
      run: |
        . $GITHUB_WORKSPACE/phlex-src/ci/entrypoint.sh
        cd $GITHUB_WORKSPACE/phlex-build

        echo "Running clang-tidy checks using CMake target..."

        set -o pipefail
        cmake --build . --target clang-tidy-check -- --export-fixes clang-tidy-fixes.yaml > clang-tidy.log 2>&1 || true

    - name: Convert clang-tidy fixes to JSON
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/phlex-build
        if [ -f clang-tidy-fixes.yaml ]; then
          yq -o=json . clang-tidy-fixes.yaml > clang-tidy-fixes.json
        else
          echo "No clang-tidy-fixes.yaml generated."
          echo "{}" > clang-tidy-fixes.json
        fi

    - name: Check for clang-tidy issues
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/phlex-build
        if [ -s clang-tidy-fixes.yaml ]; then
          echo "::error::Clang-tidy found issues in the code"
          echo "Error count by check (full details in clang-tidy-log artifact):"
          sed -nEe '\&^/& s&^.*\[([^][:space:]]+)\]$&\1&p' clang-tidy.log | sort | uniq -c | sort -n -k 1 -r
          echo "Comment '@phlexbot tidy-fix [<check>...]' on the PR to attempt auto-fix"
          exit 1
        else
          echo "âœ“ No clang-tidy issues found"
        fi

    - name: Upload clang-tidy report
      uses: actions/upload-artifact@v4
      with:
        name: clang-tidy-report
        path: phlex-build/clang-tidy-fixes.json
        retention-days: 7

    - name: Upload clang-tidy log
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: clang-tidy-log
        path: phlex-build/clang-tidy.log
        retention-days: 7

  clang-tidy-pr-comments:
    needs: clang-tidy-check
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Download clang-tidy report
        uses: actions/download-artifact@v4
        with:
          name: clang-tidy-report
          path: phlex-build
      - name: Post clang-tidy comments
        uses: platisd/clang-tidy-pr-comments@v1
        with:
          tidy-fixes-file: phlex-build/clang-tidy-fixes.json
          github-token: ${{ secrets.GITHUB_TOKEN }}

  clang-tidy-check-skipped:
    needs: detect-clang-tidy-changes
    if: ${{ needs.detect-clang-tidy-changes.outputs.has_changes != 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: No relevant clang-tidy changes detected
      run: echo "No clang-tidy relevant changes detected; check skipped."
