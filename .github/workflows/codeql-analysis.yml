name: "CodeQL - Analyze (C++/CMake + Python)"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 0'  # weekly (UTC) — adjust as needed
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  codeql:
    name: Analyze with CodeQL (C++, Python)
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: cpp, python
          config-file: .github/codeql/codeql-config.yml
          # If you need extra query packs, list them here, e.g.
          # queries: security-and-quality

      # Install dependencies required for building C++ with CMake
      - name: Install system packages (apt)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          # Common tools for CMake-based builds; adjust if your CI uses a different image
          sudo apt-get install -y build-essential cmake ninja-build python3 python3-pip lsb-release

      # Configure and build using CMake (explicit build so CodeQL can capture the build)
      - name: Configure & build (CMake)
        run: |
          set -euo pipefail
          # Use a separate build directory
          mkdir -p build
          # Prefer Ninja if CMake picks it; adjust generator or toolchain as required
          cmake -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          cmake --build build -- -j$(nproc)

      # Run unit tests (optional — do not make the step fatal for analysis)
      - name: Run tests (ctest)
        run: |
          if [ -d build ]; then
            cd build
            # allow tests to fail without failing the whole job (helps triage)
            ctest --output-on-failure || true
          else
            echo "No build directory found; skipping tests"
          fi

      # If you have Python-specific setup (virtualenv, deps), run here so Python DB is accurate
      - name: Setup Python deps (if applicable)
        if: contains( github.event.head_commit.message, 'python' ) || always()
        run: |
          if [ -f requirements.txt ]; then
            python3 -m pip install --upgrade pip
            python3 -m pip install -r requirements.txt
          else
            echo "No requirements.txt found, skipping python deps install"
          fi

      # Run CodeQL analysis (uploads results to code scanning)
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "CodeQL"
          # If you want a SARIF artifact too, uncomment:
          # sarif_output: codeql-results.sarif